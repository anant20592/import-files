{"version":3,"sources":["Table.js","App.js","reportWebVitals.js","index.js"],"names":["TableComponent","props","fileList","length","Table","striped","bordered","hover","class","style","position","onClick","sort","map","file","index","file_name","date_uploaded","status","_id","file_content","data","total","getFileContent","App","useState","selectedFile","setSelectedFile","setFileList","listening","setListening","errorMsg","setErrorMsg","setStatus","fetchFileList","field","value","url","axios","get","process","API_URL","useEffect","then","console","log","EventSource","onmessage","event","parsedData","JSON","parse","Container","marginTop","Form","onSubmit","e","preventDefault","name","split","pop","toLowerCase","size","formData","FormData","append","post","success","onFileUpload","Group","File","id","onChange","target","files","label","custom","Button","variant","type","newArray","order","sortList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.067ba897.chunk.js","sourcesContent":["import Table from 'react-bootstrap/Table';\r\n\r\nfunction TableComponent(props) {\r\n    return (\r\n        <div>\r\n            {props.fileList.length > 0 ? (\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>File Name<i class=\"fa fa-fw fa-sort-up\" style={{ position: 'absolute' }} onClick={() => props.sort('file_name', 'asc')}></i><i class=\"fa fa-fw fa-sort-down\" onClick={() => props.sort('file_name', 'desc')}></i></th>\r\n                            <th>Date uploaded<i class=\"fa fa-fw fa-sort-up\" style={{ position: 'absolute' }} onClick={() => props.sort('date_uploaded', 'asc')}></i><i class=\"fa fa-fw fa-sort-down\" onClick={() => props.sort('date_uploaded', 'desc')}></i></th>\r\n                            <th>Status<i class=\"fa fa-fw fa-sort-up\" style={{ position: 'absolute' }} onClick={() => props.sort('status', 'asc')}></i><i class=\"fa fa-fw fa-sort-down\" onClick={() => props.sort('status', 'desc')}></i></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.fileList.map((file, index) => (\r\n                            <tr key={file._id}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{file.file_name}</td>\r\n                                <td>{file.date_uploaded}</td>\r\n                                <td>{props.status[file._id] ? props.status[file._id] : file.status}</td>\r\n                                <td>\r\n                                    {file.file_content ? file.file_content.length > 0 ? (\r\n                                        file.file_content.map(data => (\r\n                                            <div key={data._id}>{data._id}  {data.total}</div>\r\n                                        ))\r\n                                    ) : <button onClick={() => props.getFileContent(file._id)}>View Data</button> : <button>View Data</button>}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            ) : null}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TableComponent;","import './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TableComponent from './Table';\n\nfunction App() {\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [fileList, setFileList] = useState([])\n  const [listening, setListening] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [status, setStatus] = useState({});\n  useEffect(() => {\n    fetchFileList()\n      .then(data => {\n        console.log(\"===== File List ======  \", data.data)\n        setFileList(data.data)\n      })\n    if (!listening) {\n      // fetchFileList()\n\n\n      const events = new EventSource(process.env.API_URL/'poll-status');\n\n      events.onmessage = (event) => {\n        const parsedData = JSON.parse(event.data);\n        console.log(\"parseddd== \", parsedData.data)\n        setStatus(parsedData.data)\n      };\n    }\n    setListening(true)\n  }, [])\n\n  function fetchFileList(field = 'date_uploaded', value = 1) {\n    let url = `files?field=${field}&val=${value}`;\n    return axios.get(process.env.API_URL/url)\n  }\n\n  function sortList(field, order) {\n    let value = order == 'asc' ? 1 : -1;\n    fetchFileList(field, value)\n      .then(data => {\n        setFileList(data.data)\n      })\n  }\n  // On file select (from the pop up)\n  function onFileChange(event) {\n    setErrorMsg('')\n    console.log(event.target.files[0])\n    // Update the state\n    setSelectedFile(event.target.files[0])\n\n  };\n\n  // On file upload (click the upload button)\n  function onFileUpload(e) {\n    e.preventDefault();\n    if (!selectedFile) {\n      setErrorMsg('Please select a file')\n      return\n    }\n    let fileFormat = selectedFile.name.split('.').pop();\n    if (fileFormat.toLowerCase() !== 'csv') {\n      setErrorMsg('Invalid file format')\n      setSelectedFile(\"\")\n      return\n    }\n\n    if (selectedFile.size > 5000000) {\n      setErrorMsg('File size too big')\n      setSelectedFile(\"\")\n      return\n    }\n\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\n      \"myFile\",\n      selectedFile,\n      selectedFile.name\n    );\n\n    // Details of the uploaded file\n    console.log(selectedFile);\n\n    // Request made to the backend api\n    // Send formData object\n    axios.post(`${process.env.API_URL}/save`, formData)\n      .then(data => {\n        console.log(\"save\", data)\n        if (data.data.success) {\n          setFileList([...fileList, data.data.data])\n        }\n      })\n    setSelectedFile(\"\")\n  };\n  function getFileContent(id) {\n    axios.get(`${process.env.API_URL}/file-content/${id}`)\n      .then(data => {\n        console.log(\"file content --- \", data)\n        if (data.data.success) {\n          let newArray = fileList.map(file => {\n            if (file._id === id) {\n              file.file_content = data.data.data;\n            }\n            return file;\n          })\n          setFileList(newArray)\n        }\n      })\n  }\n  return (\n    <Container>\n      <div style={{ marginTop: '3%' }}>\n        <h3>Import CSV file</h3>\n      </div>\n      <div>\n\n        <Form onSubmit={(e) => onFileUpload(e)}>\n          <Form.Group>\n            <Form.File\n              id=\"custom-file\"\n              onChange={(e) => onFileChange(e)}\n              onClick={(e) => {\n                e.target.value = null\n              }}\n              label={selectedFile ? selectedFile.name : \"Upload file(upto 5MB size)\"}\n              //label={selectedFile.name ?  selectedFile.name : \"Upload file(upto 5MB size)\"}\n              custom\n            />\n          </Form.Group>\n          <span>{errorMsg}</span>\n          <br />\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n      <br />\n      <TableComponent\n        fileList={fileList}\n        getFileContent={(id) => getFileContent(id)}\n        status={status}\n        sort={(field, order) => sortList(field, order)}\n      />\n    </Container>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}