{"version":3,"sources":["Table.js","App.js","reportWebVitals.js","index.js"],"names":["TableComponent","props","fileList","length","Table","striped","bordered","hover","map","file","index","file_name","date_uploaded","status","_id","file_content","data","total","onClick","getFileContent","App","useState","selectedFile","setSelectedFile","setFileList","listening","setListening","errorMsg","setErrorMsg","setStatus","useEffect","axios","get","params","id","then","console","log","EventSource","onmessage","event","parsedData","JSON","parse","Container","style","marginTop","Form","onSubmit","e","preventDefault","name","split","pop","toLowerCase","size","formData","FormData","append","post","success","onFileUpload","Group","File","onChange","target","files","label","custom","Button","variant","type","newArray","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f99d09e.chunk.js","sourcesContent":["import Table from 'react-bootstrap/Table';\r\n\r\nfunction TableComponent(props){\r\n    return (\r\n        <div>\r\n        {props.fileList.length > 0 ? (\r\n      <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>File Name</th>\r\n      <th>Date uploaded</th>\r\n      <th>Status</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    { props.fileList.map((file, index) => (\r\n      <tr key={file._id}>\r\n        <td>{index + 1}</td>\r\n        <td>{file.file_name}</td>\r\n        <td>{file.date_uploaded}</td>\r\n        <td>{props.status[file._id] ? props.status[file._id] :  file.status}</td>\r\n        <td>\r\n          {file.file_content ? file.file_content.length > 0  ? (\r\n            file.file_content.map(data => (\r\n                <div key={data._id}>{data._id}  {data.total}</div>\r\n            ))\r\n          ) : <button onClick={() => props.getFileContent(file._id)}>View Data</button> : <button>View Data</button>}\r\n        </td>\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n</Table>\r\n) : null}\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TableComponent;","import './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TableComponent from './Table';\n\nfunction App() {\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [fileList , setFileList] = useState([])\n  const [listening, setListening]= useState(false);\n  const [errorMsg , setErrorMsg] = useState(\"\");\n  const [status,setStatus] = useState({});\n   useEffect(() => {\n     fetchFileList()\n     .then(data => {\n        console.log(\"===== File List ======  \" , data.data)\n        setFileList(data.data)\n      })\n     if(!listening){\n      // fetchFileList()\n      \n    \n    const events = new EventSource('http://localhost:3000/poll-status');\n\n      events.onmessage = (event) => {\n        const parsedData = JSON.parse(event.data);\n      console.log(\"parseddd== \" ,parsedData.data)\n        setStatus(parsedData.data)\n      };\n    }\n      setListening(true)\n  },[])\n\n  function fetchFileList(){\n    return axios.get('http://localhost:3000/files',{params: {id : \"\"}})\n  }\n  // On file select (from the pop up)\n  function onFileChange (event) {\n    setErrorMsg('')\n    console.log(event.target.files[0])\n    // Update the state\n    setSelectedFile(event.target.files[0])\n\n  };\n  \n  // On file upload (click the upload button)\n  function onFileUpload(e) {\n    e.preventDefault();\n    if(!selectedFile){\n      setErrorMsg('Please select a file')\n      return\n    }\n    let fileFormat = selectedFile.name.split('.').pop();\n    if(fileFormat.toLowerCase() !== 'csv'){\n      setErrorMsg('Invalid file format')\n      setSelectedFile(\"\")\n      return\n    }\n\n    if(selectedFile.size > 5000000){\n      setErrorMsg('File size too big')\n      setSelectedFile(\"\")\n      return\n    }\n    \n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\n      \"myFile\",\n      selectedFile,\n      selectedFile.name\n    );\n  \n    // Details of the uploaded file\n    console.log(selectedFile);\n  \n    // Request made to the backend api\n    // Send formData object\n    axios.post(\"http://localhost:3000/save\", formData)\n    .then(data => {\n      console.log(\"save\" , data)\n      if(data.data.success){\n        setFileList([...fileList, data.data.data])\n      }\n    })\n    setSelectedFile(\"\")\n  };\n  function getFileContent(id){\n    axios.get(`http://localhost:3000/file-content/${id}`)\n    .then(data => {\n      console.log(\"file content --- \" , data)\n      if(data.data.success){\n        let newArray = fileList.map(file => {\n          if(file._id === id){\n            file.file_content = data.data.data;\n          }\n          return file;\n        })\n        setFileList(newArray)\n      }\n    })\n  }\n  return (\n    <Container>\n      <div style={{marginTop: '3%'}}>\n        <h3>Import CSV file</h3>\n      </div>\n      <div>\n        \n      <Form onSubmit={(e) => onFileUpload(e)}>\n        <Form.Group>\n        <Form.File \n          id=\"custom-file\"\n          onChange={(e) => onFileChange(e)}\n          label={selectedFile.name ?  selectedFile.name : \"Upload file(upto 5MB size)\"}\n          custom\n        />\n        </Form.Group>\n        <span>{errorMsg}</span>\n        <br/>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n    </Form>\n      </div>\n      <br/>\n      <TableComponent fileList={fileList} getFileContent={(id) => getFileContent(id)} status={status}/>\n          </Container>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}